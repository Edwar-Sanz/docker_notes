  run         Create and run a new container from an image
  start       Start one or more stopped containers
  exec        Execute a command in a running container
  attach      Attach local standard input, output, and error streams to a running container
  cp          Copy files/folders between a container and the local filesystem
  stop        Stop one or more running containers
  pause       Pause all processes within one or more containers
  restart     Restart one or more containers
  unpause     Unpause all processes within one or more containers
  wait        Block until one or more containers stop, then print their exit codes
  kill        Kill one or more running containers
  commit      Create a new image from a container's changes
  export      Export a container's filesystem as a tar archive
  prune       Remove all stopped containers


-d	                                Ejecutar el contenedor en segundo plano (detach).
-p <host>:<container>	              Mapear puertos del host al contenedor para permitir la comunicación.
-e <variable>=<valor>	              Establecer variables de entorno dentro del contenedor.
--name <nombre>	                    Asignar un nombre específico al contenedor.
--rm	                              Eliminar automáticamente el contenedor después de su ejecución.
-v <host-path>:<container-path>	    Montar volúmenes para compartir datos entre el host y el contenedor.
--network <nombre>	                Asignar el contenedor a una red específica.
--link <nombre>:<alias>	            Conectar el contenedor a otro por nombre y asignarle un alias.
--restart <política>	              Especificar una política de reinicio para el contenedor (always, unless-stopped, on-failure, etc.).
-it	                                Modo interactivo (similar a ejecutar una terminal interactiva).

ejemplos:
  - crea y ejecuta el contenerdor
    docker run -d -p 8080:8080 --name mysqlprueba -e MYSQL_ROOT_PASSWORD=123456 mysql:latest
  
